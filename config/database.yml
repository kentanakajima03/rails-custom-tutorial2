# SQLite version 3.x
#   gem install sqlite3
#
#   Ensure the SQLite 3 gem is defined in your Gemfile
#   gem 'sqlite3'
#
default: &default
  adapter: mysql2
  encoding: utf8
  # MYSQL_* enviroment varable is based on ./circleci/config.yml
  username: <%= ENV['DB_USERNAME'] || ENV['MYSQL_USER'] || 'repeat_app_user' %>
  password: <%= ENV['DB_PASSWORD'] || ENV['MYSQL_PASSWORD'] || 'gEpA.#sS8!' %>

development:
  <<: *default
  host: localhost
  pool: <%= ENV.fetch("RAILS_MAX_THREADS") { 5 } %>
  database: repeat_app_development

# Warning: The database defined as "test" will be erased and
# re-generated from your development database when you run "rake".
# Do not set this db to the same as development or production.
test:
  <<: *default
  database: <%= ENV['DB_DATABASE'] || ENV['MYSQL_DATABASE'] || 'repeat_app_test' %>
  host: <%= ENV['DB_HOST'] || ENV['MYSQL_HOST'] || '127.0.0.1' %>


# As with config/secrets.yml, you never want to store sensitive information,
# like your database password, in your source code. If your source code is
# ever seen by anyone, they now have access to your database.
#
# Instead, provide the password as a unix environment variable when you boot
# the app. Read http://guides.rubyonrails.org/configuring.html#configuring-a-database
# for a full rundown on how to provide these environment variables in a
# production deployment.
#
# On Heroku and other platform providers, you may have a full connection URL
# available as an environment variable. For example:
#
#   DATABASE_URL="mysql2://myuser:mypass@localhost/somedatabase"
#
# You can use this database configuration with:
#
#   production:
#     url: <%= ENV['DATABASE_URL'] %>
#
production:
  <<: *default
  url: <%= ENV['DATABASE_URL'] %>
  database: repeat_app_production
  username: repeat_app
  password: <%= ENV['REPEAT_APP_DATABASE_PASSWORD'] %>
