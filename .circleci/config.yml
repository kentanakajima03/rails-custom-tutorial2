version: 2
jobs:
  build:
    parallelism: 3
    docker:
      - image: circleci/ruby:2.4-node
        environment:
          BUNDLE_JOBS: 3
          BUNDLE_RETRY: 3
          BUNDLE_PATH: vendor/bundle
          RAILS_ENV: test
          TZ: /usr/share/zoneinfo/Asia/Tokyo
      - image: circleci/mysql:5.7
        environment:
          # see also https://hub.docker.com/_/mysql/
          ## required environment variable
          MYSQL_ROOT_PASSWORD: ubuntu
          ## optional
          MYSQL_USER: circleci-tutorial-ruby
          MYSQL_DATABASE: rails_tutorial
          MYSQL_ROOT_HOST: '%'
          TZ: /usr/share/zoneinfo/Asia/Tokyo
    steps:
      - checkout

      # Which version of bundler?
      - run:
          name: Which bundler?
          command: bundle -v

      # Restore bundle cache
      - restore_cache:
          keys:
            - rails-demo-bundle-v2-{{ checksum "Gemfile.lock" }}
            - rails-demo-bundle-v2-

      - run:
          name: Bundle Install
          command: bundle check || bundle install

      # Store bundle cache
      - save_cache:
          key: rails-demo-bundle-v2-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle

      - run:
          name: Yarn Install
          command: yarn install --cache-folder ~/.cache/yarn

      # Store yarn / webpacker cache
      - save_cache:
          key: rails-demo-yarn-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn

      - run:
          name: Wait for DB
          # default port for mysql is 3306
          command: dockerize -wait tcp://127.0.0.1:3306 -timeout 1m

      - run:
          name: Database setup
          command: bin/rails db:schema:load --trace

      - run:
          name: run brakeman
          command: bundle exec brakeman -qz

      # Run rspec in parallel
      - type: shell
        command: |
          bundle exec rspec --profile 10 \
                            --format RspecJunitFormatter \
                            --out test_results/rspec.xml \
                            --format progress \
                            $(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings)
      # Save test results for timing analysis
      - store_test_results:
          path: test_results
